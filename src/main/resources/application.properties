
# About profiles.
#
# There two different profiles: maven and spring profiles. They are not connected directly.
# - The maven profile sets the database plugins, either using H2 (memory database) or MySQL server.
#   The mysql profile is set as default.
# - The spring profile sets the database connection with configuration parameters (URL, user, password, etc.).
#   The active spring profile must be set manually.
#
# Config 1: test server on local VM
#   - set spring.profiles.active=devel
#   - edit application-devel.properties for your local VM MySQL server configuration.
#   - run:
#     > mvn spring-boot:run
#
# Config 2: adding a production server
#   - let's say you have a MySQL server running with credentials that you have set properly
#   - and you want to call this profile as 'mysql-prod'
#   - create a text file under src/main/resource called application-mysql-prod.properties
#   - copy the content from application-devel.properties and set the configuration properly
#   - set spring.profiles.active=mysql-prod
#   - run the application with the following command:
#     > mvn spring-boot:run 

# PROFILES
spring.profiles.active=devel

# EMBEDDED SERVER CONFIGURATION (ServerProperties)
server.port = 8585
server.context-path = /xpacs-adm

# LOGGING
logging.file = /tmp/xpacs-web.log
logging.level.org.springframework.web = ERROR

# JPA/HIBERNATE
# Show or not log for each sql query
spring.jpa.show-sql = true

